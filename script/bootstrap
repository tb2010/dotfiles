#!/bin/sh

cd "$(dirname "$0")/.."
DOTFILES_ROOT=$(pwd -P)

#set -e 

echo ''

info() {
    printf "\r  [ \033[00;34m..\033[0m ] $1\n"
}

user() {
    printf "\r  [ \033[0;33m??\033[0m ] $1\n"
}

success() {
    printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}

fail() {
    printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
    echo ''
    exit
}

setup_gitconfig() {
    info 'setup gitconfig'
    if [ -z "$(git config --global --get user.email)" ]; then
        user ' -- What is your git author name?'
        read -r user_name
        user ' -- What is your git author email?'
        read -r user_email

        git config --global user.name "$user_name"
        git config --global user.email "$user_email"
    elif [ "$(git config --global --get dotfiles.managed)" != "true" ]; then
        # Let .dotfiles manage the git config
        user_name="$(git config --global --get user.name)"
        user_email="$(git config --global --get user.email)"
        mv ~/.gitconfig ~/.gitconfig.backup
        success "moved ~/.gitconfig to ~/.gitconfig.backup"
        git config --global user.name "$user_name"
        git config --global user.email "$user_email"
    else 
        info "it appears to be mananged by dotfiles already"
    fi
    git config --global include.path ~/.gitconfig.local
    git config --global dotfiles.managed true
    success 'gitconfig'
}

link_file() {
    if [ -e "$2" ]; then
        if [ "$(readlink "$2")" = "$1" ]; then
            success "skipped $1"
            return 0
        else
            mv "$2" "$2.backup"
            success "moved $2 to $2.backup"
        fi
    fi
    ln -sf "$1" "$2"
    success "linked $1 to $2"
}

install_dotfiles() {
    info 'installing dotfiles'
    find -H "$DOTFILES_ROOT" -maxdepth 3 -name '*.symlink' -not -path '*.git*' |
        while read -r src; do 
            dst="$HOME/.$(basename "${src%.*}")"
            link_file "$src" "$dst"
        done
}

find_zsh() {
    if command -v zsh > /dev/null 2>&1 && grep "$(command -v zsh)" /etc/shells >/dev/null; then
        command -v zsh
    else
        echo "/bin/zsh"
    fi
}

setup_gitconfig
install_dotfiles

info "installing dependancies"
if ./bin/dot_update; then
    success "dependencies installed"
else 
    fail "error installing depencencies"
fi

zsh="$(find_zsh)"
test "$(expr "$SHELL" : '.*/\(.*\)')" != "zsh" &&
    command -v chsh >/dev/null 2>&1 &&
    chsh -s "$zsh" &&
    success "set $("zsh" --version) at $zsh as default shell"
A
echo ''
echo '   bootstrap complete !'
